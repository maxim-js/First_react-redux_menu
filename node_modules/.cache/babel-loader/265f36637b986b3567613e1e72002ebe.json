{"ast":null,"code":"export default class RestoService {\n  constructor() {\n    this._apiBase = 'http://localhost:3000';\n  }\n\n  async getResource(url) {\n    const res = await fetch(\"\".concat(this._apiBase).concat(url));\n\n    if (!res.ok) {\n      throw new Error(\"Could not fetch \".concat(url) + \", received \".concat(res.status));\n    }\n\n    return await res.json();\n  }\n\n  async getMenuItems() {\n    return await this.getResource('/menu/');\n  } // async getItem(id) {\n  //     const res = await this.getResource('/menu/');\n  //     console.log(res);\n  //     const item = res.find( (el) => {\n  //         console.log(`el.id: ${el.id}, id: ${id}`);\n  //         return el.id === +id;\n  //     }) \n  //     console.log(item);\n  //     return item;\n  // }\n\n\n  async setOrder(order) {\n    const number = await this.getOrderNumber();\n    const newOrder = {\n      id: number,\n      order: order\n    };\n    const response = await fetch(\"\".concat(this._apiBase, \"/orders\"), {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json;charset=utf-8'\n      },\n      body: JSON.stringify(newOrder)\n    });\n\n    if (!response.ok) {\n      throw new Error('json error');\n    }\n  }\n\n  async getOrderNumber() {\n    const res = await this.getResource('/orders/');\n    const orderNumber = res.length + 1;\n    return orderNumber;\n  }\n\n}","map":{"version":3,"sources":["/Users/macbook/Documents/programming/menu_git/src/services/resto-service.js"],"names":["RestoService","_apiBase","getResource","url","res","fetch","ok","Error","status","json","getMenuItems","setOrder","order","number","getOrderNumber","newOrder","id","response","method","headers","body","JSON","stringify","orderNumber","length"],"mappings":"AAAA,eAAe,MAAMA,YAAN,CAAkB;AAAA;AAAA,SAC7BC,QAD6B,GAClB,uBADkB;AAAA;;AAG7B,QAAMC,WAAN,CAAkBC,GAAlB,EAAuB;AACnB,UAAMC,GAAG,GAAG,MAAMC,KAAK,WAAI,KAAKJ,QAAT,SAAoBE,GAApB,EAAvB;;AACA,QAAI,CAACC,GAAG,CAACE,EAAT,EAAa;AACT,YAAM,IAAIC,KAAJ,CAAU,0BAAmBJ,GAAnB,yBACEC,GAAG,CAACI,MADN,CAAV,CAAN;AAEH;;AACD,WAAO,MAAMJ,GAAG,CAACK,IAAJ,EAAb;AACH;;AAED,QAAMC,YAAN,GAAsB;AAClB,WAAO,MAAM,KAAKR,WAAL,CAAiB,QAAjB,CAAb;AACH,GAd4B,CAgB7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,QAAMS,QAAN,CAAeC,KAAf,EAAsB;AAClB,UAAMC,MAAM,GAAG,MAAM,KAAKC,cAAL,EAArB;AACA,UAAMC,QAAQ,GAAG;AACbC,MAAAA,EAAE,EAAEH,MADS;AAEbD,MAAAA,KAAK,EAAEA;AAFM,KAAjB;AAIA,UAAMK,QAAQ,GAAG,MAAMZ,KAAK,WAAI,KAAKJ,QAAT,cAA4B;AACpDiB,MAAAA,MAAM,EAAE,MAD4C;AAEpDC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAF2C;AAKpDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,QAAf;AAL8C,KAA5B,CAA5B;;AAOA,QAAI,CAACE,QAAQ,CAACX,EAAd,EAAiB;AACb,YAAM,IAAIC,KAAJ,CAAU,YAAV,CAAN;AACH;AACJ;;AAED,QAAMO,cAAN,GAAsB;AAClB,UAAMV,GAAG,GAAG,MAAM,KAAKF,WAAL,CAAiB,UAAjB,CAAlB;AACA,UAAMqB,WAAW,GAAGnB,GAAG,CAACoB,MAAJ,GAAW,CAA/B;AAEA,WAAOD,WAAP;AACH;;AAlD4B","sourcesContent":["export default class RestoService{\n    _apiBase = 'http://localhost:3000';\n\n    async getResource(url) {\n        const res = await fetch(`${this._apiBase}${url}`);\n        if (!res.ok) {\n            throw new Error(`Could not fetch ${url}` + \n                `, received ${res.status}`);\n        }\n        return await res.json();\n    }\n\n    async getMenuItems () {\n        return await this.getResource('/menu/');\n    }\n\n    // async getItem(id) {\n    //     const res = await this.getResource('/menu/');\n    //     console.log(res);\n    //     const item = res.find( (el) => {\n    //         console.log(`el.id: ${el.id}, id: ${id}`);\n    //         return el.id === +id;\n    //     }) \n    //     console.log(item);\n    //     return item;\n    // }\n\n    async setOrder(order) {\n        const number = await this.getOrderNumber();\n        const newOrder = {\n            id: number,\n            order: order\n        }\n        const response = await fetch(`${this._apiBase}/orders`, {\n            method: 'POST', \n            headers: {\n                'Content-Type': 'application/json;charset=utf-8'\n            },\n            body: JSON.stringify(newOrder)\n        });\n        if (!response.ok){\n            throw new Error('json error'); \n        }\n    }\n\n    async getOrderNumber(){\n        const res = await this.getResource('/orders/');\n        const orderNumber = res.length+1;\n\n        return orderNumber\n    }\n}"]},"metadata":{},"sourceType":"module"}