{"ast":null,"code":"// import React, {Component} from 'react';\n// import { connect } from 'react-redux';\n// import WithRestoService from '../hoc/';\n// import Spinner from '../spinner';\n// import Error from '../error';\n// import {menuLoaded, menuRequested, menuError, addedToCart} from '../../actions';\n// import {Card, CardText, CardBody, Button, CardTitle, CardImg, Badge} from 'reactstrap';\n// import './itemPage.css';\n// class ItemPage extends Component {\n//     componentDidMount() {\n//         if( this.props.menuItems.length === 0){\n//             this.props.menuRequested();\n//             const {RestoService} = this.props;\n//             RestoService.getMenuItems()\n//                 .then(res => this.props.menuLoaded(res))\n//                 .catch(error => this.props.menuError());\n//         }\n//     }\n//     render() {\n//         const {loading, error, menuItems} = this.props;\n//         if(error) {\n//             return (\n//                 <div className = \"item_page\">\n//                     <Error/>\n//                 </div>\n//             )\n//         }\n//         if(loading) {\n//             return (\n//                 <div className = \"item_page\">\n//                     <Spinner/>\n//                 </div>\n//             )\n//         }\n//         const item = menuItems.find(el => +el.id === +this.props.match.params.id)\n//         const{title, url, category, aboutPerson, price, id} = item;\n//         //console.log(this.props.menuItems)\n//         return (\n//             <div className = \"item_page\">\n//                 <Card className=\"Card\">\n//                     <CardImg top width=\"100%\" src={url} alt={title}/>\n//                     <CardBody>\n//                         <CardTitle><h4>{title}</h4></CardTitle>\n//                         <CardText>Наставник: <small className=\"text-muted\">{category}</small></CardText>\n//                         <CardText><small className=\"text-muted\">{aboutPerson}</small></CardText>\n//                         <div className=\"scale_main\">\n//                             <div className=\"scale_first\"></div>\n//                             <div className=\"scale_second\"></div>\n//                         </div>\n//                             <div className=\"resources\">\n//                                 <h4>Cобрано: <Badge color=\"success\" >50 %</Badge></h4>\n//                             </div>\n//                         <Button>Подробнее &gt; &gt;</Button>\n//                     </CardBody>\n//                 </Card>\n//             </div>\n//         );\n//     }\n// }\n// const mapStateToProps =  (state) =>{\n//     return {\n//         menuItems: state.menu,\n//         loading: state.loading,\n//         error: state.error\n//     }\n// }\n// const mapDispatchToProps = {\n//     menuLoaded: menuLoaded,\n//     menuRequested,\n//     menuError,\n//     addedToCart\n// }\n// export default WithRestoService ()( connect(mapStateToProps, mapDispatchToProps)(ItemPage) );","map":{"version":3,"sources":["/Users/macbook/Documents/programming/JS_task_answers-master/React_step_14/src/components/pages/itemPage.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAGA","sourcesContent":["// import React, {Component} from 'react';\n// import { connect } from 'react-redux';\n// import WithRestoService from '../hoc/';\n// import Spinner from '../spinner';\n// import Error from '../error';\n// import {menuLoaded, menuRequested, menuError, addedToCart} from '../../actions';\n// import {Card, CardText, CardBody, Button, CardTitle, CardImg, Badge} from 'reactstrap';\n\n// import './itemPage.css';\n\n\n\n// class ItemPage extends Component {\n\n//     componentDidMount() {\n//         if( this.props.menuItems.length === 0){\n//             this.props.menuRequested();\n\n//             const {RestoService} = this.props;\n//             RestoService.getMenuItems()\n//                 .then(res => this.props.menuLoaded(res))\n//                 .catch(error => this.props.menuError());\n//         }\n//     }\n\n//     render() {\n//         const {loading, error, menuItems} = this.props;\n//         if(error) {\n//             return (\n//                 <div className = \"item_page\">\n//                     <Error/>\n//                 </div>\n//             )\n//         }\n//         if(loading) {\n//             return (\n//                 <div className = \"item_page\">\n//                     <Spinner/>\n//                 </div>\n//             )\n//         }\n//         const item = menuItems.find(el => +el.id === +this.props.match.params.id)\n//         const{title, url, category, aboutPerson, price, id} = item;\n//         //console.log(this.props.menuItems)\n\n\n//         return (\n//             <div className = \"item_page\">\n//                 <Card className=\"Card\">\n//                     <CardImg top width=\"100%\" src={url} alt={title}/>\n//                     <CardBody>\n//                         <CardTitle><h4>{title}</h4></CardTitle>\n//                         <CardText>Наставник: <small className=\"text-muted\">{category}</small></CardText>\n//                         <CardText><small className=\"text-muted\">{aboutPerson}</small></CardText>\n//                         <div className=\"scale_main\">\n//                             <div className=\"scale_first\"></div>\n//                             <div className=\"scale_second\"></div>\n//                         </div>\n//                             <div className=\"resources\">\n//                                 <h4>Cобрано: <Badge color=\"success\" >50 %</Badge></h4>\n//                             </div>\n//                         <Button>Подробнее &gt; &gt;</Button>\n//                     </CardBody>\n//                 </Card>\n//             </div>\n//         );\n//     }\n// }\n\n\n\n\n// const mapStateToProps =  (state) =>{\n//     return {\n//         menuItems: state.menu,\n//         loading: state.loading,\n//         error: state.error\n//     }\n// }\n\n\n// const mapDispatchToProps = {\n//     menuLoaded: menuLoaded,\n//     menuRequested,\n//     menuError,\n//     addedToCart\n// }\n\n\n// export default WithRestoService ()( connect(mapStateToProps, mapDispatchToProps)(ItemPage) );"]},"metadata":{},"sourceType":"module"}